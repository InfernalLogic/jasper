// <auto-generated/>
#pragma warning disable
using Jasper.Persistence.Marten.Publishing;
using Microsoft.Extensions.Logging;

namespace Internal.Generated.JasperHandlers
{
    // START: IncrementBHandler1516306648
    public class IncrementBHandler1516306648 : Jasper.Runtime.Handlers.MessageHandler
    {
        private readonly Jasper.Persistence.Marten.Publishing.OutboxedSessionFactory _outboxedSessionFactory;
        private readonly Microsoft.Extensions.Logging.ILogger<Jasper.Persistence.Testing.Marten.LetterHandler> _logger;

        public IncrementBHandler1516306648(Jasper.Persistence.Marten.Publishing.OutboxedSessionFactory outboxedSessionFactory, Microsoft.Extensions.Logging.ILogger<Jasper.Persistence.Testing.Marten.LetterHandler> logger)
        {
            _outboxedSessionFactory = outboxedSessionFactory;
            _logger = logger;
        }



        public override async System.Threading.Tasks.Task HandleAsync(Jasper.IMessageContext context, System.Threading.CancellationToken cancellation)
        {
            var letterHandler = new Jasper.Persistence.Testing.Marten.LetterHandler();
            var incrementB = (Jasper.Persistence.Testing.Marten.IncrementB)context.Envelope.Message;
            await using var documentSession = _outboxedSessionFactory.OpenSession(context);
            var eventStore = documentSession.Events;
            // Loading Marten aggregate
            var eventStream = await eventStore.FetchForWriting<Jasper.Persistence.Testing.Marten.LetterAggregate>(incrementB.LetterAggregateId, cancellation).ConfigureAwait(false);

            var bEvent = await letterHandler.Handle(incrementB, eventStream.Aggregate, _logger).ConfigureAwait(false);
            if (bEvent != null)
            {
                // Capturing any possible events returned from the command handlers
                eventStream.AppendOne(bEvent);

            }

            await documentSession.SaveChangesAsync(cancellation).ConfigureAwait(false);
        }

    }

    // END: IncrementBHandler1516306648
    
    
}

